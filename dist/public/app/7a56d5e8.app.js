"use strict";angular.module("tttimeApp",["ngCookies","ngResource","ngSanitize","ui.router","ui.bootstrap"]).config(["$stateProvider","$urlRouterProvider","$locationProvider","$httpProvider",function(a,b,c,d){b.otherwise("/"),c.html5Mode(!0),d.interceptors.push("authInterceptor")}]).factory("authInterceptor",["$rootScope","$q","$cookieStore","$location",function(a,b,c,d){return{request:function(a){return a.headers=a.headers||{},c.get("token")&&(a.headers.Authorization="Bearer "+c.get("token")),a},responseError:function(a){return 401===a.status?(d.path("/login"),c.remove("token"),b.reject(a)):b.reject(a)}}}]).run(["$rootScope","$location","Auth",function(a,b,c){a.$on("$stateChangeStart",function(a,d){c.isLoggedInAsync(function(a){d.authenticate&&!a&&b.path("/login")})})}]),angular.module("tttimeApp").config(["$stateProvider",function(a){a.state("login",{url:"/login",templateUrl:"app/account/login/login.html",controller:"LoginCtrl"}).state("signup",{url:"/signup",templateUrl:"app/account/signup/signup.html",controller:"SignupCtrl"}).state("settings",{url:"/settings",templateUrl:"app/account/settings/settings.html",controller:"SettingsCtrl",authenticate:!0})}]),angular.module("tttimeApp").controller("LoginCtrl",["$scope","Auth","$location","$window",function(a,b,c,d){a.user={},a.errors={},a.login=function(d){a.submitted=!0,d.$valid&&b.login({email:a.user.email,password:a.user.password}).then(function(){c.path("/")}).catch(function(b){a.errors.other=b.message})},a.loginOauth=function(a){d.location.href="/auth/"+a}}]),angular.module("tttimeApp").controller("SettingsCtrl",["$scope","User","Auth",function(a,b,c){a.alerts=[],a.errors={},a.currentUser=c.getCurrentUser(),a.changePassword=function(b){a.submitted=!0,b.$valid&&c.changePassword(a.user.oldPassword,a.user.newPassword).then(function(){a.message="Password successfully changed."}).catch(function(){b.password.$setValidity("mongoose",!1),a.errors.other="Incorrect password",a.message=""})},a.saveUserSettings=function(){b.update(a.currentUser,function(){a.addAlert({type:"success",msg:"User settings successfully saved"})},function(){a.addAlert({type:"danger",msg:"Error saving user settings"})})},a.addAlert=function(b){a.alerts.push(b)},a.closeAlert=function(b){a.alerts.splice(b,1)}}]),angular.module("tttimeApp").controller("SignupCtrl",["$scope","Auth","$location","$window",function(a,b,c,d){a.user={},a.errors={},a.register=function(d){a.submitted=!0,d.$valid&&b.createUser({name:a.user.name,email:a.user.email,password:a.user.password}).then(function(){c.path("/")}).catch(function(b){b=b.data,a.errors={},angular.forEach(b.errors,function(b,c){d[c].$setValidity("mongoose",!1),a.errors[c]=b.message})})},a.loginOauth=function(a){d.location.href="/auth/"+a}}]),angular.module("tttimeApp").controller("AdminCtrl",["$scope","$http","Auth","User",function(a,b,c,d){a.users=d.query(),a.delete=function(b){d.remove({id:b._id}),angular.forEach(a.users,function(c,d){c===b&&a.users.splice(d,1)})}}]),angular.module("tttimeApp").config(["$stateProvider",function(a){a.state("admin",{url:"/admin",templateUrl:"app/admin/admin.html",controller:"AdminCtrl"})}]),angular.module("tttimeApp").controller("MainCtrl",["$scope","Auth","Workentry",function(a,b,c){function d(a){if(a)return""+a.getYear()+a.getMonth()+a.getDate()}function e(){a.dateHourMap={},a.workEntries.forEach(function(b){"string"==typeof b.date&&(b.date=new Date(b.date));var c=d(b.date);a.dateHourMap[c]?a.dateHourMap[c]+=b.hours:a.dateHourMap[c]=b.hours});var c=b.getCurrentUser().settings.preferredWorkingHoursPerDay;a.workEntries.forEach(function(b){var e=d(b.date);b.colorClass=a.dateHourMap[e]>=c?"light-green":"light-red"})}a.workEntries=[],a.newEntry={},a.isLoggedIn=b.isLoggedIn,a.datePickerOpened=!1,a.dateHourMap={},a.filter={dateFrom:{},dateTo:{}},a.reloadEntries=function(){function d(b){b&&c.query(function(b){a.workEntries=b,e()})}b.isLoggedInAsync(d)},a.reloadEntries(),a.addEntry=function(){c.save(a.newEntry,function(b){a.workEntries.push(b),e()}),a.newEntry={}},a.deleteEntry=function(b){var c=a.workEntries.indexOf(b);c>-1&&a.workEntries.splice(c,1),b.$remove(),e()},a.updateEntry=function(a,b){b.$valid&&(delete a._backup,a.$save(function(){a.editMode=!1,e()}))},a.switchToEdit=function(a){angular.copy(a,a._backup={}),a.editMode=!0},a.revertChanges=function(a){angular.copy(a._backup,a),delete a._backup,a.editMode=!1},a.openDatePicker=function(a,b){a.preventDefault(),a.stopPropagation(),b&&(b.datePickerOpened=!0)},a.getFilteredEntries=function(){return a.workEntries.filter(function(b){return a.filter.dateFrom.date&&a.filter.dateTo.date?a.filter.dateFrom.date<=b.date&&a.filter.dateTo.date>=b.date:a.filter.dateFrom.date?a.filter.dateFrom.date<=b.date:!a.filter.dateTo.date||a.filter.dateTo.date>=b.date})}}]),angular.module("tttimeApp").config(["$stateProvider",function(a){a.state("main",{url:"/",templateUrl:"app/main/main.html",controller:"MainCtrl"})}]),angular.module("tttimeApp").controller("SummaryCtrl",["$scope","Auth","Workentry",function(a,b,c){function d(a,b,c,d){this.dateStr=a,this.date=b,this.totalHours=c,this.entries=d}function e(a){if(a)return""+a.getYear()+a.getMonth()+a.getDate()}function f(){var c={};a.workEntries.forEach(function(b){"string"==typeof b.date&&(b.date=new Date(b.date));var f=e(b.date);if(c[f])c[f].totalHours+=b.hours,c[f].entries.push(b);else{var g=new d(f,b.date,b.hours,[b]);c[f]=g,a.groupedEntries.push(g)}}),a.filterEntries(),a.prefHours=b.getCurrentUser().settings.preferredWorkingHoursPerDay}a.workEntries=[],a.newEntry={},a.isLoggedIn=b.isLoggedIn,a.datePickerOpened=!1,a.filteredEntries=[],a.groupedEntries=[],a.filter={dateFrom:{},dateTo:{}},a.reloadEntries=function(){function d(b){b&&c.query(function(b){a.workEntries=b,f()})}b.isLoggedInAsync(d)},a.reloadEntries(),a.openDatePicker=function(a,b){a.preventDefault(),a.stopPropagation(),b&&(b.datePickerOpened=!0)},a.filterEntries=function(){a.filteredEntries=a.groupedEntries.filter(function(b){return a.filter.dateFrom.date&&a.filter.dateTo.date?a.filter.dateFrom.date<=b.date&&a.filter.dateTo.date>=b.date:a.filter.dateFrom.date?a.filter.dateFrom.date<=b.date:!a.filter.dateTo.date||a.filter.dateTo.date>=b.date})}}]),angular.module("tttimeApp").config(["$stateProvider",function(a){a.state("summary",{url:"/summary",templateUrl:"app/summary/summary.html",controller:"SummaryCtrl"})}]),angular.module("tttimeApp").factory("Workentry",["$resource",function(a){return a("/api/workentries/:id",{id:"@_id"})}]),angular.module("tttimeApp").factory("Auth",["$location","$rootScope","$http","User","$cookieStore","$q",function(a,b,c,d,e,f){var g={};return e.get("token")&&(g=d.get()),{login:function(a,b){var h=b||angular.noop,i=f.defer();return c.post("/auth/local",{email:a.email,password:a.password}).success(function(a){return e.put("token",a.token),g=d.get(),i.resolve(a),h()}).error(function(a){return this.logout(),i.reject(a),h(a)}.bind(this)),i.promise},logout:function(){e.remove("token"),g={}},createUser:function(a,b){var c=b||angular.noop;return d.save(a,function(b){return e.put("token",b.token),g=d.get(),c(a)},function(a){return this.logout(),c(a)}.bind(this)).$promise},changePassword:function(a,b,c){var e=c||angular.noop;return d.changePassword({id:g._id},{oldPassword:a,newPassword:b},function(a){return e(a)},function(a){return e(a)}).$promise},getCurrentUser:function(){return g},isLoggedIn:function(){return g.hasOwnProperty("role")},isLoggedInAsync:function(a){g.hasOwnProperty("$promise")?g.$promise.then(function(){a(!0)}).catch(function(){a(!1)}):a(g.hasOwnProperty("role")?!0:!1)},isAdmin:function(){return"admin"===g.role},getToken:function(){return e.get("token")}}}]),angular.module("tttimeApp").factory("User",["$resource",function(a){return a("/api/users/:id/:controller",{id:"@_id"},{changePassword:{method:"PUT",params:{controller:"password"}},get:{method:"GET",params:{id:"me"}},update:{method:"PUT",params:{id:"me",controller:"save"}}})}]),angular.module("tttimeApp").factory("Modal",["$rootScope","$modal",function(a,b){function c(c,d){var e=a.$new();return c=c||{},d=d||"modal-default",angular.extend(e,c),b.open({templateUrl:"components/modal/modal.html",windowClass:d,scope:e})}return{confirm:{delete:function(a){return a=a||angular.noop,function(){var b,d=Array.prototype.slice.call(arguments),e=d.shift();b=c({modal:{dismissable:!0,title:"Confirm Delete",html:"<p>Are you sure you want to delete <strong>"+e+"</strong> ?</p>",buttons:[{classes:"btn-danger",text:"Delete",click:function(a){b.close(a)}},{classes:"btn-default",text:"Cancel",click:function(a){b.dismiss(a)}}]}},"modal-danger"),b.result.then(function(b){a.apply(b,d)})}}}}}]),angular.module("tttimeApp").directive("mongooseError",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){b.on("keydown",function(){return d.$setValidity("mongoose",!0)})}}}),angular.module("tttimeApp").controller("NavbarCtrl",["$scope","$location","Auth",function(a,b,c){a.menu=[{title:"Home",link:"/"},{title:"Summary",link:"/summary"}],a.isCollapsed=!0,a.isLoggedIn=c.isLoggedIn,a.isAdmin=c.isAdmin,a.getCurrentUser=c.getCurrentUser,a.logout=function(){c.logout(),b.path("/login")},a.isActive=function(a){return a===b.path()}}]),angular.module("tttimeApp").run(["$templateCache",function(a){a.put("app/account/login/login.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div class="col-sm-12 col-md-8"><h1>Login</h1></div><div class="col-sm-12 col-md-6"><form class=form name=form ng-submit=login(form) novalidate><div class=form-group><label>Email</label><input type=email name=email class=form-control ng-model=user.email required></div><div class=form-group><label>Password</label><input type=password name=password class=form-control ng-model=user.password required></div><div class="form-group has-error"><p class=help-block ng-show="form.email.$error.required && form.password.$error.required && submitted">Please enter your email and password.</p><p class=help-block ng-show="form.email.$error.email && submitted">Please enter a valid email.</p><p class=help-block>{{ errors.other }}</p></div><div><button class="btn btn-primary btn-lg btn-login" type=submit>Login</button><!--a class="btn btn-default btn-lg btn-register" href="/signup">\n            Register\n          </a--></div><hr><div><!--a class="btn btn-facebook" href="" ng-click="loginOauth(\'facebook\')">\n            <i class="fa fa-facebook"></i> Connect with Facebook\n          </a>\n          <a class="btn btn-google-plus" href="" ng-click="loginOauth(\'google\')">\n            <i class="fa fa-google-plus"></i> Connect with Google+\n          </a--></div></form></div></div><hr></div>'),a.put("app/account/settings/settings.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div class="col-sm-12 col-md-4 col-md-offset-4"><h1>Change Password</h1></div><div class="col-sm-12 col-md-4 col-md-offset-4"><form class=form name=form ng-submit=changePassword(form) novalidate><div class=form-group><label>Current Password</label><input type=password name=password class=form-control ng-model=user.oldPassword mongoose-error><p class=help-block ng-show=form.password.$error.mongoose>{{ errors.other }}</p></div><div class=form-group><label>New Password</label><input type=password name=newPassword class=form-control ng-model=user.newPassword ng-minlength=3 required><p class=help-block ng-show="(form.newPassword.$error.minlength || form.newPassword.$error.required) && (form.newPassword.$dirty || submitted)">Password must be at least 3 characters.</p></div><p class=help-block>{{ message }}</p><button class="btn btn-lg btn-primary" type=submit>Save changes</button></form></div></div><div class=row></div><div class=row><div class="col-sm-12 col-md-4 col-md-offset-4"><h1>User Settings</h1></div><div class="col-sm-12 col-md-4 col-md-offset-4"><form class=form name=form ng-submit=saveUserSettings(); novalidate><alert ng-repeat="alert in alerts" type={{alert.type}} close=closeAlert($index)>{{alert.msg}}</alert><div class=form-group><label>Preferred working hours per day</label><input type=number name=prefHours class=form-control ng-model=currentUser.settings.preferredWorkingHoursPerDay min=0 max=24 mongoose-error></div><button class="btn btn-lg btn-primary" type=submit>Save Settings</button></form></div></div></div>'),a.put("app/account/signup/signup.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div class="col-sm-12 col-md-8"><h1>Sign up</h1></div><div class="col-sm-12 col-md-6"><form class=form name=form ng-submit=register(form) novalidate><div class=form-group ng-class="{ \'has-success\': form.name.$valid && submitted,\n                                            \'has-error\': form.name.$invalid && submitted }"><label>Name</label><input name=name class=form-control ng-model=user.name required><p class=help-block ng-show="form.name.$error.required && submitted">A name is required</p></div><div class=form-group ng-class="{ \'has-success\': form.email.$valid && submitted,\n                                            \'has-error\': form.email.$invalid && submitted }"><label>Email</label><input type=email name=email class=form-control ng-model=user.email required mongoose-error><p class=help-block ng-show="form.email.$error.email && submitted">Doesn\'t look like a valid email.</p><p class=help-block ng-show="form.email.$error.required && submitted">What\'s your email address?</p><p class=help-block ng-show=form.email.$error.mongoose>{{ errors.email }}</p></div><div class=form-group ng-class="{ \'has-success\': form.password.$valid && submitted,\n                                            \'has-error\': form.password.$invalid && submitted }"><label>Password</label><input type=password name=password class=form-control ng-model=user.password ng-minlength=3 required mongoose-error><p class=help-block ng-show="(form.password.$error.minlength || form.password.$error.required) && submitted">Password must be at least 3 characters.</p><p class=help-block ng-show=form.password.$error.mongoose>{{ errors.password }}</p></div><div><button class="btn btn-primary btn-lg btn-login" type=submit>Sign up</button><!--a class="btn btn-default btn-lg btn-register" href="/login">\n            Login\n          </a--></div><hr><div><!--a class="btn btn-facebook" href="" ng-click="loginOauth(\'facebook\')">\n            <i class="fa fa-facebook"></i> Connect with Facebook\n          </a>\n          <a class="btn btn-google-plus" href="" ng-click="loginOauth(\'google\')">\n            <i class="fa fa-google-plus"></i> Connect with Google+\n          </a--></div></form></div></div><hr></div>'),a.put("app/admin/admin.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><p>The delete user and user index api routes are restricted to users with the \'admin\' role.</p><ul class=list-group><li class=list-group-item ng-repeat="user in users"><strong>{{user.name}}</strong><br><span class=text-muted>{{user.email}}</span> <a ng-click=delete(user) class=trash><span class="glyphicon glyphicon-trash pull-right"></span></a></li></ul></div>'),a.put("app/main/main.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><header class=hero-unit id=banner><div class=container><h1>Time Tracker app</h1></div></header><div class=container><div class=row ng-show=!isLoggedIn()><h2>Please log in to use Time Tracker app</h2></div><div class=row ng-show=isLoggedIn()><div class="col-xs-12 col-sm-3 hidden-print"><h3 class=page-header>Filter Entries</h3><div class=form-group>From:<div class=input-group><input class=form-control datepicker-popup="dd MMM yyyy" ng-model=filter.dateFrom.date is-open=filter.dateFrom.datePickerOpened close-text=Close> <span class=input-group-btn><button type=button class="btn btn-default" ng-click="openDatePicker($event, filter.dateFrom)"><i class="glyphicon glyphicon-calendar"></i></button></span></div></div><div class=form-group>To:<div class=input-group><input class=form-control datepicker-popup="dd MMM yyyy" ng-model=filter.dateTo.date is-open=filter.dateTo.datePickerOpened close-text=Close> <span class=input-group-btn><button type=button class="btn btn-default" ng-click="openDatePicker($event, filter.dateTo)"><i class="glyphicon glyphicon-calendar"></i></button></span></div></div></div><div class="col-xs-12 col-sm-8"><h3 class="page-header hidden-print">Add new entry</h3><form class=hidden-print name=newEntryForm ng-submit=addEntry(newEntryForm)><div class=col-sm-4><div class=form-group>Date:<div class=input-group><input class=form-control datepicker-popup="dd MMM yyyy" ng-model=newEntry.date is-open=newEntry.datePickerOpened ng-required=true close-text=Close> <span class=input-group-btn><button type=button class="btn btn-default" ng-click="openDatePicker($event, newEntry)"><i class="glyphicon glyphicon-calendar"></i></button></span></div></div></div><div class=col-sm-4><div class=form-group>Hours:<div class=input-group><input class=form-control type=number ng-model=newEntry.hours ng-required=true min=0 max=24 step=0.5></div></div></div><div class=col-sm-10><div class=form-group>Notes:<div><textarea class=form-control ng-model=newEntry.desc ng-required=true></textarea></div></div></div><div class=col-sm-2><div class=form-group>&nbsp;<div class=input-group><button class="btn btn-primary" type=submit>ADD</button></div></div></div></form></div><div class="row clearfix"></div><div class="col-xs-12 col-sm-11"><h1 class=page-header>Work Entries</h1><form name=editEntryForm><alert ng-show=!editEntryForm.$valid type=danger>Please review your work entry. All fields are required, hours must be in 0-24 range.</alert><ul class=list-group><li class="list-group-item single-entry {{entry.colorClass}}" ng-repeat="entry in getFilteredEntries() | orderBy:\'date\'" ng-class="{\'edit-mode\':entry.editMode }"><span ng-if=!entry.editMode><strong>{{entry.date | date:\'dd MMM yyyy\'}}</strong> - {{entry.hours}} hours<br><span class=text-muted>{{entry.desc}}</span> </span><span ng-if=entry.editMode class=start-edit-mode ng-class="{\'animate-edit-mode\':entry.editMode }"><div class=col-sm-4><div class=form-group>Date:<div class=input-group><input class=form-control datepicker-popup="dd MMM yyyy" ng-model=entry.date is-open=entry.datePickerOpened ng-required=true close-text=Close> <span class=input-group-btn><button type=button class="btn btn-default" ng-click="openDatePicker($event, entry)"><i class="glyphicon glyphicon-calendar"></i></button></span></div></div></div><div class=col-sm-4><div class=form-group>Hours:<div class=input-group><input class=form-control type=number ng-model=entry.hours ng-required=true min=0 max=24 step=0.5></div></div></div><div class=col-sm-8><div class=form-group>Notes:<div><textarea class=form-control ng-model=entry.desc ng-required=true></textarea></div></div></div></span><a ng-click="updateEntry(entry, editEntryForm);" ng-if=entry.editMode class=positive-green><span class="glyphicon glyphicon-ok pull-right entry-action"></span></a> <a ng-click=revertChanges(entry); ng-if=entry.editMode><span class="glyphicon glyphicon-chevron-left pull-right entry-action"></span></a> <a ng-click=deleteEntry(entry); ng-if=!entry.editMode class=trash><span class="glyphicon glyphicon-trash pull-right entry-action"></span></a> <a ng-click=switchToEdit(entry) tooltip={{entry._id}} ng-if=!entry.editMode><span class="glyphicon glyphicon-edit pull-right entry-action"></span></a></li></ul></form></div></div></div><footer class=footer><div class=container><p>Time Tracker App | by <a href=https://github.com/romanmandryk target=_blank>Roman Mandryk</a></p></div></footer>'),a.put("app/summary/summary.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><header class=hero-unit id=banner><div class=container><h1>Time Tracker App</h1></div></header><div class=container><div class=row ng-show=!isLoggedIn()><h2>Please log in to use Time Tracker app</h2></div><div class=row ng-show=isLoggedIn()><div class="col-xs-12 col-sm-3 hidden-print"><h3 class=page-header>Filter Entries</h3><div class=form-group>From:<div class=input-group><input class=form-control ng-change=filterEntries() datepicker-popup="dd MMM yyyy" ng-model=filter.dateFrom.date is-open=filter.dateFrom.datePickerOpened close-text=Close> <span class=input-group-btn><button type=button class="btn btn-default" ng-click="openDatePicker($event, filter.dateFrom)"><i class="glyphicon glyphicon-calendar"></i></button></span></div></div><div class=form-group>To:<div class=input-group><input class=form-control ng-change=filterEntries() datepicker-popup="dd MMM yyyy" ng-model=filter.dateTo.date is-open=filter.dateTo.datePickerOpened close-text=Close> <span class=input-group-btn><button type=button class="btn btn-default" ng-click="openDatePicker($event, filter.dateTo)"><i class="glyphicon glyphicon-calendar"></i></button></span></div></div></div><div class="row clearfix"></div><div class="col-xs-12 col-sm-11"><h1 class=page-header>Work Summary</h1><ul class=list-group><li class="list-group-item single-entry {{entry.colorClass}}" ng-repeat="entry in filteredEntries | orderBy:\'date\'" ng-class="{\'light-green\':entry.totalHours >= prefHours, \'light-red\':entry.totalHours < prefHours}"><span><strong>{{entry.date | date:\'dd MMM yyyy\'}} - {{entry.totalHours}} hours in total</strong><br><ul class=subEntryList><li class=subEntry ng-repeat="subEntry in entry.entries">{{subEntry.hours}} h - {{subEntry.desc}}</li></ul></span></li></ul></div></div></div><footer class=footer><div class=container><p>Time Tracker App | by <a href=https://github.com/romanmandryk target=_blank>Roman Mandryk</a></p></div></footer>'),a.put("components/modal/modal.html",'<div class=modal-header><button ng-if=modal.dismissable type=button ng-click=$dismiss() class=close>&times;</button><h4 ng-if=modal.title ng-bind=modal.title class=modal-title></h4></div><div class=modal-body><p ng-if=modal.text ng-bind=modal.text></p><div ng-if=modal.html ng-bind-html=modal.html></div></div><div class=modal-footer><button ng-repeat="button in modal.buttons" ng-class=button.classes ng-click=button.click($event) ng-bind=button.text class=btn></button></div>'),a.put("components/navbar/navbar.html",'<div class="navbar navbar-default navbar-static-top" ng-controller=NavbarCtrl><div class=container><div class=navbar-header><button class=navbar-toggle type=button ng-click="isCollapsed = !isCollapsed"><span class=sr-only>Toggle navigation</span> <span class=icon-bar></span> <span class=icon-bar></span> <span class=icon-bar></span></button> <a href=/ class=navbar-brand>Time Tracker App</a></div><div collapse=isCollapsed class="navbar-collapse collapse" id=navbar-main><ul class="nav navbar-nav"><li ng-repeat="item in menu" ng-class="{active: isActive(item.link)}"><a ng-href={{item.link}}>{{item.title}}</a></li><!--li ng-show="isAdmin()" ng-class="{active: isActive(\'/admin\')}"><a href="/admin">Admin</a></li--></ul><ul class="nav navbar-nav navbar-right"><li ng-hide=isLoggedIn() ng-class="{active: isActive(\'/signup\')}"><a href=/signup>Sign up</a></li><li ng-hide=isLoggedIn() ng-class="{active: isActive(\'/login\')}"><a href=/login>Login</a></li><li ng-show=isLoggedIn()><p class=navbar-text>Hello {{ getCurrentUser().name }}</p></li><li ng-show=isLoggedIn() ng-class="{active: isActive(\'/settings\')}"><a href=/settings><span class="glyphicon glyphicon-cog"></span></a></li><li ng-show=isLoggedIn() ng-class="{active: isActive(\'/logout\')}"><a href="" ng-click=logout()>Logout</a></li></ul></div></div></div>')}]);